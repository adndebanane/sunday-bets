reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
distribution
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
gamma_v <- c(1);
sim_index=1
simulation <- exp3(K,gamma_v[sim_index],t_max);
gamma_v <- c(0.5);
print(sim_index);
simulation <- exp3(K,gamma_v[sim_index],t_max);
gamma_v <- c(0.5,1);
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
##Set-up 2 : 2 arms, one without predator, the other with a predator
reward_function <- function(t_step,arm_chosen){
if(arm_chosen == 1){
return(1);
} else {
return(0);
}
}
##Plot
palette <- c("blue","red","green")
K <- 2;
gamma_v <- c(0.02,0.5,1);
t_max <- 10000;
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
##Set-up 2 : 2 arms, one without predator, the other with a predator
reward_function <- function(t_step,arm_chosen){
if(arm_chosen == 1){
return(1);
} else {
return(0);
}
}
##Plot
palette <- c("blue","red","green")
K <- 2;
gamma_v <- c(0.02,0.5,1);
t_max <- 10;
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
##Set-up 2 : 2 arms, one without predator, the other with a predator
reward_function <- function(t_step,arm_chosen){
if(arm_chosen == 1){
return(1);
} else {
return(0);
}
}
##Plot
palette <- c("blue","red","green")
K <- 2;
gamma_v <- c(0.02,0.5,1);
t_max <- 100;
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
##Set-up 2 : 2 arms, one without predator, the other with a predator
reward_function <- function(t_step,arm_chosen){
if(arm_chosen == 1){
return(1);
} else {
return(0);
}
}
##Plot
palette <- c("blue","red","green")
K <- 2;
gamma_v <- c(0.02,0.5,1);
t_max <- 100;
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- NULL;
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
#print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
##Set-up 2 : 2 arms, one without predator, the other with a predator
reward_function <- function(t_step,arm_chosen){
if(arm_chosen == 1){
return(1);
} else {
return(0);
}
}
##Plot
palette <- c("blue","red","green")
K <- 2;
gamma_v <- c(0.02,0.5,1);
t_max <- 10000;
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- NULL;
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
#print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
##Set-up 2 : 2 arms, one without predator, the other with a predator
reward_function <- function(t_step,arm_chosen){
if(arm_chosen == 1){
return(1);
} else {
return(0);
}
}
##Plot
palette <- c("blue","red","green")
K <- 2;
gamma_v <- c(0.02,0.5,1);
t_max <- 1000;
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- NULL;
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
exp3 <- function(arms_nb,gamma,t_max){
t_steps <- 1:t_max;
distribution <- matrix(NA,nrow=t_max+1,ncol=arms_nb);
weights <- rep(1,arms_nb);
arm_chosen <- rep(NA,t_max);
for(t_step in t_steps){
#print(t_step);
distribution[t_step,] <- (1 - gamma) * (weights / sum(weights)) + gamma / arms_nb;
arm_chosen[t_step] <- sample(1:arms_nb,1,prob=distribution[t_step,]);
reward <- reward_function(t_step,arm_chosen[t_step]);
reward_est <- reward / distribution[t_step,arm_chosen[t_step]];
weights[arm_chosen[t_step]] <- weights[arm_chosen[t_step]] * exp(gamma * reward_est / arms_nb);
weights[-arm_chosen[t_step]] <- weights[-arm_chosen[t_step]];
}
return(list(distribution,arm_chosen));
}
##Set-up 2 : 2 arms, one without predator, the other with a predator
reward_function <- function(t_step,arm_chosen){
if(arm_chosen == 1){
return(1);
} else {
return(0);
}
}
##Plot
palette <- c("blue","red","green")
K <- 2;
gamma_v <- c(0.02,0.3,0.5,0.8,1);
t_max <- 1000;
for(sim_index in 1:length(gamma_v)){
print(sim_index);
simulation <- NULL;
simulation <- exp3(K,gamma_v[sim_index],t_max);
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(gamma_v[sim_index],sep=""));
lines(simulation[[1]][,2]~seq(1,t_max+1,by=1),col=palette[2]);
legend("right",legend=c("Probability to pick Branch 1",
"Probability to pick Branch 2"),
lty=c(rep("solid",3)),lwd=3,col=palette,box.col=rgb(1,1,1,0.1),
bg=rgb(1,1,1,0.1),cex=0.9);
text(0,1,"A",cex=1.2);
#     dev.copy2pdf(file="prob-advmab.pdf");
#     dev.off();
x11();
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",ylab="Branch chosen");
text(0,3.2,"B",cex=1.2);
#     dev.copy2pdf(file="choices-advmab.pdf");
#     dev.off();
}
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=expression(paste(gamma,"="gamma_v[sim_index],sep="")));
simulation
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=expression(paste(gamma,"="gamma_v[sim_index],sep="")));
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=expression(paste(gamma,"=",gamma_v[sim_index],sep="")));
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(expression(gamma),"=",gamma_v[sim_index],sep=""));
?expression
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=c(expression(gamma),paste("=",gamma_v[sim_index],sep="")));
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=c(expression(gamma),"="));
text_main <- paste("gamma =",gamma_v[sim_index],sep="")
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=expression(text_main));
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=expression(paste("gamma =",gamma_v[sim_index],sep="")));
text_main <- paste("gamma =",gamma_v[sim_index],sep=+)
text_main <- paste("gamma =",gamma_v[sim_index],sep="+")
text_main <- paste("gamma =",gamma_v[sim_index],sep="+")
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=expression(text_main));
text_main
text_main <- paste(gamma,"=",gamma_v[sim_index],sep="")
x11();
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=expression(text_main));
?bquote
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=bquote(text_main));
text_main
text_main <- paste(gamma,"=",gamma_v[sim_index],sep="")
text_main
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(paste(expression(gamma)),paste(,"=",gamma_v[sim_index],sep=""));
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(paste(expression(gamma)),
paste(,"=",gamma_v[sim_index],sep="")));
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=paste(paste(expression(gamma)),
paste("=",gamma_v[sim_index],sep="")));
plot(simulation[[1]][,1]~seq(1,t_max+1,by=1),ylim=c(0,1),col=palette[1],
type="l",xlab="Time",ylab="Probability",main=bquote(gamma == .(gamma_v[sim_index])));
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",
ylab="Branch chosen",lab=2,main=bquote(gamma == .(gamma_v[sim_index])));
ylab="Branch chosen",lab=c(2,10,0),main=bquote(gamma == .(gamma_v[sim_index])));
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",
ylab="Branch chosen",lab=c(2,10,0),main=bquote(gamma == .(gamma_v[sim_index])));
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",
ylab="Branch chosen",lab=c(3,2,0),main=bquote(gamma == .(gamma_v[sim_index])));
plot(simulation[[2]]~seq(1,t_max,by=1),pch='.',ylim=c(1,2.2),xlab="Time",
ylab="Branch chosen",lab=c(3,1,0),main=bquote(gamma == .(gamma_v[sim_index])));
citation()
setwd("Documents/40-paris/00-foot/")
prono <- read.table(file="oldprono.txt",header=TRUE,sep=";");
results <- read.table(file="resultats.txt",header=TRUE,sep=";");
nb_prono <- length(prono$idmatch)
perf_random <- NULL;
perf_deterministic <- NULL;
for(i in 1:nb_prono){
match_id <- prono$idmatch[i];
results_match_id <- which(results$idmatch == as.character(match_id));
if(length(results_match_id) > 0){
if(as.character(prono$random_prono[i]) == results$resultat[results_match_id]){
print("random:")
#print(paste(match_id," : ",as.character(prono$random_prono[i])," - ",
#    results$resultat[results_match_id],sep=""));
perf_random <- c(perf_random,1);
} else {
perf_random <- c(perf_random,0);
}
if(as.character(prono$deterministic_prono[i]) == results$resultat[results_match_id]){
print("deterministic:")
#print(paste(match_id," : ",as.character(prono$deterministic_prono[i])," - ",
#    results$resultat[results_match_id],sep=""));
perf_deterministic <- c(perf_deterministic,1);
} else {
perf_deterministic <- c(perf_deterministic,0);
}
} else {
print(paste("Error: result of match ",prono$idmatch[i]," unknown",sep=""));
}
}
print(paste("Perf random algorithm on ",length(perf_random)," matchs",sep=""))
print(sum(perf_random)/length(perf_random)*100);
print(sum(perf_deterministic)/length(perf_deterministic)*100);
